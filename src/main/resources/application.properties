spring.application.name=CIRCUITE-BREAKER
server.port=8686

### --------- CIRCUIT BREAKER CONFIG-Resilliance4J ---------
#Defines how failures are measuredâ€”by call count(COUNT_BASED)or time window(TIME_BASED).
resilience4j.circuitbreaker.instances.sample-api.slidingWindowType=COUNT_BASED
# Check the last 5 calls
resilience4j.circuitbreaker.instances.sample-api.slidingWindowSize=5
# exceeded 50% of failures to trigger open state
resilience4j.circuitbreaker.instances.sample-api.failureRateThreshold=50
#Thresholding (ensures enough calls before evaluation)
resilience4j.circuitbreaker.instances.sample-api.minimumNumberOfCalls=3
# Remains open for 5s before trying again
resilience4j.circuitbreaker.instances.sample-api.waitDurationInOpenState=5s
#Testing (limited trial calls to decide recovery)
resilience4j.circuitbreaker.instances.sample-api.permittedNumberOfCallsInHalfOpenState=2


### --------- RETRY CONFIG ---------
#many times to try the operation(1 initial+2 retries)
resilience4j.retry.instances.sample-api.maxAttempts=3
#Sets the delay between retry attempts
resilience4j.retry.instances.sample-api.waitDuration=1s
resilience4j.retry.instances.sample-api.retryExceptions=java.lang.RuntimeException
resilience4j.retry.instances.sample-api.ignoreExceptions=java.io.IOException
